name: Auto Tag on Push

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  auto_tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 必须完整历史，才能获取所有 tag
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag
        id: get_latest_tag
        run: |
          # 获取所有标签并按版本排序，取最新的一个
          latest_tag=$(git tag -l "v*" --sort=-version:refname | head -n 1)
          
          # 如果没有找到标签，使用默认值
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi
          
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Latest tag is: $latest_tag"

      - name: Calculate next tag
        id: calc_next
        run: |
          echo "Current latest_tag from env: $latest_tag"
          
          # 去掉前缀 v
          version=${latest_tag#v}
          echo "Version without v: $version"
          
          # 分割版本号
          IFS='.' read -r major minor patch <<< "$version"
          
          # 防止空值并设置默认值
          major=${major:-0}
          minor=${minor:-0}
          patch=${patch:-0}
          
          echo "Current version - Major: $major, Minor: $minor, Patch: $patch"
          
          # 递增 patch 版本
          patch=$((patch + 1))
          next_tag="v${major}.${minor}.${patch}"
          
          echo "next_tag=$next_tag" >> $GITHUB_ENV
          echo "Next tag will be: $next_tag"

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating tag: $next_tag"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $next_tag
          git push origin $next_tag
          echo "Successfully created and pushed tag: $next_tag"