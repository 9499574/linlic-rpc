name: Auto Tag on Push

on:
  push:
    branches:
      - master  # 如果主分支是 main，请改成 main
permissions:
  contents: write

jobs:
  auto_tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 必须完整历史，才能获取所有 tag

      - name: Get latest tag
        id: get_latest_tag
        run: |
          # 获取最新 tag（如果没有则设为 v0.0.0）
          latest_tag=$(git describe --tags "$(git rev-list --tags --max-count=1)" 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Latest tag is $latest_tag"

      - name: Calculate next tag
        id: calc_next
        run: |
          version=${latest_tag#v}       # 去掉前缀 v
          IFS='.' read -r major minor patch <<< "$version"

          # 防止空值
          major=${major:-0}
          minor=${minor:-0}
          patch=${patch:-0}

          # 每次 patch +1，例如 v9.3.2 → v9.3.3
          patch=$((patch + 1))
          next_tag="v${major}.${minor}.${patch}"

          echo "next_tag=$next_tag" >> $GITHUB_ENV
          echo "Next tag will be $next_tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag $next_tag
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git $next_tag